# --------------------------------------------------------
# (c) Copyright 2014, 2020 by Jason DeLaat.
# Licensed under BSD 3-clause licence.
# --------------------------------------------------------
"""
"""
import pymonad.monad
import pymonad.tools

class _Promise(pymonad.monad.Monad):
    """
    """
    @classmethod
    def insert(cls, value):
        return Promise(lambda resolve, reject: resolve(value))

    def is_fulfilled(self):
        return self.monoid
    
    def catch(self, error_handler):
        if self.is_fulfilled():
            return self
        else:
            return Promise(lambda resolve, reject: resolve(error_handler(self.run())))

    #def map(self, function):
    #    if self.is_fulfilled():
    #        try:
    #            value = self.run()
    #            return Promise(lambda resolve, reject: resolve(function(value)))
    #        except Exception as e:
    #            return self.__class__(lambda resolve, reject: e, False)
    #            
    def run(self):
        return self.value(pymonad.tools.identity, _reject)

def _reject(error):
    raise error

def Promise(function):
    return _Promise(function, True)

print(
    Promise(lambda resolve, reject: reject(IndexError())).run()
)
